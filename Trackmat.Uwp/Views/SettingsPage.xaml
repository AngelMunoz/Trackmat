<Page
    x:Class="Trackmat.Uwp.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="using:Caliburn.Micro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Trackmat.Uwp.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Style="{StaticResource PageStyle}"
    xmlns:xaml="using:Windows.UI.Xaml"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d">
    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" EnumType="ElementTheme" />
        <converters:StringVisibilityConverter x:Key="StringVisibilityConverter" EmptyValue="Collapsed" NotEmptyValue="Visible" />
        <converters:StringVisibilityConverter x:Key="NegatedStringVisibilityConverter" EmptyValue="Visible" NotEmptyValue="Collapsed" />
    </Page.Resources>

    <Grid Margin="{StaticResource MediumLeftRightMargin}">
        <StackPanel
            x:Name="ContentArea">
            <TextBlock x:Uid="Settings_Personalization" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock x:Uid="Settings_Theme" />

                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <RadioButton
                        x:Name="ThemeLightButton"
                        x:Uid="Settings_Theme_Light"
                        cm:Message.Attach="SwitchTheme(ThemeLightButton.Tag)"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.Tag>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.Tag>
                    </RadioButton>
                    <RadioButton
                        x:Name="ThemeDarkButton"
                        x:Uid="Settings_Theme_Dark"
                        cm:Message.Attach="SwitchTheme(ThemeDarkButton.Tag)"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.Tag>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.Tag>
                    </RadioButton>
                    <RadioButton
                        x:Name="ThemeDefaultButton"
                        x:Uid="Settings_Theme_Default"
                        cm:Message.Attach="SwitchTheme(ThemeDefaultButton.Tag)"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.Tag>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.Tag>
                    </RadioButton>
                </StackPanel>
            </StackPanel>

            <TextBlock x:Uid="Settings_DBConfig" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource XSmallTopMargin}" Visibility="{x:Bind ViewModel.DbPath, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}">
                <TextBlock Margin="0, 5, 0, 5" Text="Database Path" />
                <TextBox Margin="0,10,0,10" Text="{x:Bind ViewModel.DbPath, Mode=OneWay}" IsReadOnly="True" />
                <TextBlock x:Uid="FirstRun_Body" Margin="0, 5, 0, 5" FontSize="12" />
                <Button
                    Margin="0,10,0,10"
                    Content="Import Existing Db"
                    cm:Message.Attach="OnMigrateExistingDatabase()" />
            </StackPanel>
            <StackPanel Margin="{StaticResource XSmallTopMargin}" Visibility="{x:Bind ViewModel.DbPath, Converter={StaticResource NegatedStringVisibilityConverter}, Mode=OneWay}">
                <Button
                    Margin="0,10,0,10"
                    Content="Set Default"
                    cm:Message.Attach="SetDefault()" />
                <Button
                    Margin="0,10,0,10"
                    Content="Import Existing Db"
                    cm:Message.Attach="OnMigrateExistingDatabase()" />
                <TextBlock x:Uid="FirstRun_Body" Margin="0, 5, 0, 5" FontSize="12" />
            </StackPanel>

            <TextBlock x:Uid="Settings_About" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource XSmallTopMargin}">
                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                <TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource XSmallTopMargin}"
                    Style="{ThemeResource BodyTextBlockStyle}" />

                <HyperlinkButton x:Uid="Settings_PrivacyTermsLink" Margin="{StaticResource XSmallTopMargin}" />
            </StackPanel>
        </StackPanel>
        <controls:InAppNotification
            x:Name="SettingsNotification"
            ShowDismissButton="True"
            VerticalOffset="100"
            HorizontalOffset="0"
            StackMode="Replace" />
    </Grid>
</Page>
